---
  openapi: "3.0.0"
  info: 
    description: "Manage timesheet"
    version: "0.1.0"
    contact: {}
  tags: 
    - 
      name: "documentation"
      description: ""
    - 
      name: "auth"
      description: ""
    - 
      name: "users"
      description: ""
    - 
      name: "projects"
      description: ""
    - 
      name: "times"
      description: ""
  servers: []
  components: 
    securitySchemes: 
      bearer: 
        scheme: "bearer"
        bearerFormat: "JWT"
        type: "http"
    schemas: 
      CreateUserDto: 
        type: "object"
        properties: 
          email: 
            type: "string"
            example: "test@gmail.com"
          password: 
            type: "string"
            example: "%nhEjdU^e5wWZv%G0"
        required: 
          - "email"
          - "password"
      UpdateUserDto: 
        type: "object"
        properties: {}
      AuthCredentialsDto: 
        type: "object"
        properties: 
          email: 
            type: "string"
          password: 
            type: "string"
        required: 
          - "email"
          - "password"
      CreateProjectDto: 
        type: "object"
        properties: 
          name: 
            type: "string"
          hour_rate: 
            type: "number"
        required: 
          - "name"
          - "hour_rate"
      UpdateProjectDto: 
        type: "object"
        properties: {}
      CreateTimeDto: 
        type: "object"
        properties: 
          date: 
            type: "string"
            format: "YYYY-MM-DD"
            example: "2021-01-05"
          duration: 
            type: "number"
            description: "has to be a multiple of 0.25"
            minimum: 0.25
            example: 0.75
          description: 
            type: "string"
        required: 
          - "date"
          - "duration"
          - "description"
      UpdateTimeDto: 
        type: "object"
        properties: {}
  paths: 
    /api/v1/users: 
      post: 
        operationId: "UsersController_create"
        summary: "Create a user"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateUserDto"
        responses: 
          201: 
            description: ""
        tags: 
          - "users"
      get: 
        operationId: "UsersController_findAll"
        summary: "Get all users"
        parameters: []
        responses: 
          200: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
    /api/v1/users/{userId}: 
      get: 
        operationId: "UsersController_findOne"
        summary: "Get a user"
        parameters: 
          - 
            name: "userId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
      patch: 
        operationId: "UsersController_update"
        summary: "Update a user"
        parameters: 
          - 
            name: "userId"
            required: true
            in: "path"
            schema: 
              type: "string"
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/UpdateUserDto"
        responses: 
          200: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
      delete: 
        operationId: "UsersController_remove"
        summary: "Delete a user"
        parameters: 
          - 
            name: "userId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          204: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
    /api/v1/users/{userId}/roles: 
      post: 
        operationId: "UsersController_addRoles"
        summary: "Add a role to a user"
        parameters: 
          - 
            name: "userId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          201: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
    /api/v1/users/{userId}/roles/{roleId}: 
      delete: 
        operationId: "UsersController_removeRole"
        summary: "Delete a role to a user"
        parameters: 
          - 
            name: "userId"
            required: true
            in: "path"
            schema: 
              type: "string"
          - 
            name: "roleId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: ""
        tags: 
          - "users"
        security: 
          - 
            bearer: []
    /api/v1/login: 
      post: 
        operationId: "AuthController_login"
        summary: "Login to application"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/AuthCredentialsDto"
        responses: 
          201: 
            description: ""
        tags: 
          - "auth"
    /api/v1/projects: 
      post: 
        operationId: "ProjectsController_create"
        summary: "Create a project"
        parameters: []
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateProjectDto"
        responses: 
          201: 
            description: ""
        tags: 
          - "projects"
        security: 
          - 
            bearer: []
      get: 
        operationId: "ProjectsController_findAll"
        summary: "Get all projects"
        parameters: []
        responses: 
          200: 
            description: ""
        tags: 
          - "projects"
        security: 
          - 
            bearer: []
    /api/v1/projects/{projectId}: 
      get: 
        operationId: "ProjectsController_findOne"
        summary: "Get a project"
        parameters: 
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: ""
        tags: 
          - "projects"
        security: 
          - 
            bearer: []
      patch: 
        operationId: "ProjectsController_update"
        summary: "Update a project"
        parameters: 
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/UpdateProjectDto"
        responses: 
          200: 
            description: ""
        tags: 
          - "projects"
        security: 
          - 
            bearer: []
      delete: 
        operationId: "ProjectsController_remove"
        summary: "Delete a project"
        parameters: 
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          204: 
            description: ""
        tags: 
          - "projects"
        security: 
          - 
            bearer: []
    /api/v1/projects/{projectId}/times: 
      post: 
        operationId: "TimesController_create"
        summary: "Create a time for a project"
        parameters: 
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/CreateTimeDto"
        responses: 
          201: 
            description: ""
        tags: 
          - "times"
        security: 
          - 
            bearer: []
      get: 
        operationId: "TimesController_findAll"
        summary: "Get all times for a project"
        parameters: 
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: ""
        tags: 
          - "times"
        security: 
          - 
            bearer: []
    /api/v1/projects/{projectId}/times/{timeId}: 
      get: 
        operationId: "TimesController_findOne"
        summary: "Get a time"
        parameters: 
          - 
            name: "timeId"
            required: true
            in: "path"
            schema: 
              type: "string"
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          200: 
            description: ""
        tags: 
          - "times"
        security: 
          - 
            bearer: []
      patch: 
        operationId: "TimesController_update"
        summary: "Update a time"
        parameters: 
          - 
            name: "timeId"
            required: true
            in: "path"
            schema: 
              type: "string"
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        requestBody: 
          required: true
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/UpdateTimeDto"
        responses: 
          200: 
            description: ""
        tags: 
          - "times"
        security: 
          - 
            bearer: []
      delete: 
        operationId: "TimesController_remove"
        summary: "Delete a time"
        parameters: 
          - 
            name: "timeId"
            required: true
            in: "path"
            schema: 
              type: "string"
          - 
            name: "projectId"
            required: true
            in: "path"
            schema: 
              type: "string"
        responses: 
          204: 
            description: ""
        tags: 
          - "times"
        security: 
          - 
            bearer: []
    /api/v1/documentation: 
      get: 
        operationId: "DocumentationController_index"
        summary: "See swagger UI documentation"
        parameters: []
        responses: 
          200: 
            description: ""
        tags: 
          - "documentation"
    /api/v1/documentation.json: 
      get: 
        operationId: "DocumentationController_getJson"
        summary: "Get OpenApi documentation as JSON"
        parameters: []
        responses: 
          200: 
            description: ""
        tags: 
          - "documentation"
    /api/v1/documentation.yaml: 
      get: 
        operationId: "DocumentationController_getYaml"
        summary: "Get OpenApi documentation as YAML"
        parameters: []
        responses: 
          200: 
            description: ""
        tags: 
          - "documentation"
